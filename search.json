[{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://gnoblet.github.io/visualizeR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://gnoblet.github.io/visualizeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Noblet Guillaume. Author, maintainer.","code":""},{"path":"https://gnoblet.github.io/visualizeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guillaume N (2025). visualizeR: color! viz!. R package version 1.0, https://github.com/gnoblet/visualizeR.","code":"@Manual{,   title = {visualizeR: What a color! What a viz!},   author = {Noblet Guillaume},   year = {2025},   note = {R package version 1.0},   url = {https://github.com/gnoblet/visualizeR}, }"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"visualizer-","dir":"","previous_headings":"","what":"What a color! What a viz!","title":"What a color! What a viz!","text":"color! viz! visualizeR proposes utils sane colors, ready--go color palettes, visualization functions. package thoroughly tested comprehensive code coverage.","code":""},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What a color! What a viz!","text":"can install last version visualizeR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"gnoblet/visualizeR\", build_vignettes = TRUE)"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"What a color! What a viz!","text":"Roadmap follows: Full revamp core functions (colors, pattern, incl. adding test pre-commit structures) Add test coverage reporting via codecov Maintain >80% test coverage across functions Dumbell Waffle Donut Alluvial Option tag css code + titles/subtitles/captions","code":""},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"request","dir":"","previous_headings":"","what":"Request","title":"What a color! What a viz!","text":"Please, hesitate pull request new viz colors color palettes, email request change (gnoblet@zaclys.net).","code":""},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"code-coverage","dir":"","previous_headings":"","what":"Code Coverage","title":"What a color! What a viz!","text":"visualizeR uses codecov test coverage reporting. can see current coverage status clicking codecov badge top README. aim maintain high test coverage ensure code reliability stability.","code":""},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"colors","dir":"","previous_headings":"","what":"Colors","title":"What a color! What a viz!","text":"Functions access colors palettes color() palette(). Feel free pull request new colors.","code":"library(visualizeR)  # Get all saved colors, named color(unname = F)[1:10] #>           white    lighter_grey      light_grey       dark_grey light_blue_grey  #>       \"#FFFFFF\"       \"#F5F5F5\"       \"#E3E3E3\"       \"#464647\"       \"#B3C6D1\"  #>            grey           black  cat_2_yellow_1  cat_2_yellow_2   cat_2_light_1  #>       \"#71716F\"       \"#000000\"       \"#ffc20a\"       \"#0c7bdc\"       \"#fefe62\"  # Extract a color palette as hexadecimal codes and reversed palette(palette = \"cat_5_main\", reversed = TRUE, color_ramp_palette = FALSE) #> [1] \"#083d77\" \"#4ecdc4\" \"#f4c095\" \"#b47eb3\" \"#ffd5ff\"  # Get all color palettes names palette(show_palettes = TRUE) #>  [1] \"cat_2_yellow\"            \"cat_2_light\"             #>  [3] \"cat_2_green\"             \"cat_2_blue\"              #>  [5] \"cat_5_main\"              \"cat_5_ibm\"               #>  [7] \"cat_3_aquamarine\"        \"cat_3_tol_high_contrast\" #>  [9] \"cat_8_tol_adapted\"       \"cat_3_custom_1\"          #> [11] \"cat_4_custom_1\"          \"cat_5_custom_1\"          #> [13] \"cat_6_custom_1\"          \"div_5_orange_blue\"       #> [15] \"div_5_green_purple\""},{"path":[]},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-1-bar-chart","dir":"","previous_headings":"Charts","what":"Example 1: Bar chart","title":"What a color! What a viz!","text":"","code":"library(palmerpenguins) library(dplyr)  df <- penguins |>   group_by(island, species) |>   summarize(     mean_bl = mean(bill_length_mm, na.rm = T),     mean_fl = mean(flipper_length_mm, na.rm = T)   ) |>   ungroup()  df_island <- penguins |>   group_by(island) |>   summarize(     mean_bl = mean(bill_length_mm, na.rm = T),     mean_fl = mean(flipper_length_mm, na.rm = T)   ) |>   ungroup()  # Simple bar chart by group with some alpha transparency bar(df, \"island\", \"mean_bl\", \"species\", x_title = \"Mean of bill length\", title = \"Mean of bill length by island and species\") # Flipped / Horizontal hbar(df, \"island\", \"mean_bl\", \"species\", x_title = \"Mean of bill length\", title = \"Mean of bill length by island and species\") # Facetted bar(df, \"island\", \"mean_bl\", facet = \"species\", x_title = \"Mean of bill length\", title = \"Mean of bill length by island and species\", add_color_guide = FALSE) #  Flipped, with text, smaller width, and caption hbar(df = df_island, x = \"island\", y = \"mean_bl\", title = \"Mean of bill length by island\", add_text = T, width = 0.6, add_text_suffix = \"mm\", add_text_expand_limit = 1.3, add_color_guide = FALSE, caption = \"Data: palmerpenguins package.\")"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-2-scatterplot","dir":"","previous_headings":"Charts","what":"Example 2: Scatterplot","title":"What a color! What a viz!","text":"","code":"# Simple scatterplot point(penguins, \"bill_length_mm\", \"flipper_length_mm\") # Scatterplot with grouping colors, greater dot size, some transparency point(penguins, \"bill_length_mm\", \"flipper_length_mm\", \"island\", group_title = \"Island\", alpha = 0.6, size = 3, title = \"Bill vs. flipper length\", , add_color_guide = FALSE) # Facetted scatterplot by island point(penguins, \"bill_length_mm\", \"flipper_length_mm\", \"species\", \"island\", \"fixed\", group_title = \"Species\", title = \"Bill vs. flipper length by species and island\", add_color_guide = FALSE)"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-3-dumbbell-plot","dir":"","previous_headings":"Charts","what":"Example 3: Dumbbell plot","title":"What a color! What a viz!","text":"Remember ensure data long format two groups x-axis; instance, IDP returnee NA values.","code":"# Prepare long data df <- tibble::tibble(   admin1 = rep(letters[1:8], 2),   setting = c(rep(c(\"Rural\", \"Urban\"), 4), rep(c(\"Urban\", \"Rural\"), 4)),   stat = rnorm(16, mean = 50, sd = 18) ) |>   dplyr::mutate(stat = round(stat, 0))     # dumbbell( #   df, #   'stat', #   'setting', #   'admin1', #   title = '% of HHs that reported open defecation as sanitation facility', #   group_y_title = 'Admin 1', #   group_x_title = 'Setting' # )"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-4-donut-chart","dir":"","previous_headings":"Charts","what":"Example 4: donut chart","title":"What a color! What a viz!","text":"","code":"# Some summarized data: % of HHs by displacement status df <- tibble::tibble(   status = c(\"Displaced\", \"Non displaced\", \"Returnee\", \"Don't know/Prefer not to say\"),   percentage = c(18, 65, 12, 3) )  # Donut # donut(df, #   status, #   percentage, #   hole_size = 3, #   add_text_suffix = '%', #   add_text_color = color('dark_grey'), #   add_text_treshold_display = 5, #   x_title = 'Displacement status', #   title = '% of HHs by displacement status' # )"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-5-waffle-chart","dir":"","previous_headings":"Charts","what":"Example 5: Waffle chart","title":"What a color! What a viz!","text":"","code":"# # waffle(df, status, percentage, x_title = 'A caption', title = 'A title', subtitle = 'A subtitle')"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-6-alluvial-chart","dir":"","previous_headings":"Charts","what":"Example 6: Alluvial chart","title":"What a color! What a viz!","text":"","code":"# Some summarized data: % of HHs by self-reported status of displacement in 2021 and in 2022 df <- tibble::tibble(   status_from = c(     rep(\"Displaced\", 4),     rep(\"Non displaced\", 4),     rep(\"Returnee\", 4),     rep(\"Dnk/Pnts\", 4)   ),   status_to = c(\"Displaced\", \"Non displaced\", \"Returnee\", \"Dnk/Pnts\", \"Displaced\", \"Non displaced\", \"Returnee\", \"Dnk/Pnts\", \"Displaced\", \"Non displaced\", \"Returnee\", \"Dnk/Pnts\", \"Displaced\", \"Non displaced\", \"Returnee\", \"Dnk/Pnts\"),   percentage = c(20, 8, 18, 1, 12, 21, 0, 2, 0, 3, 12, 1, 0, 0, 1, 1) )  # Alluvial, here the group is the status for 2021  # alluvial(df, #   status_from, #   status_to, #   percentage, #   status_from, #   from_levels = c(\"Displaced\", \"Non displaced\", \"Returnee\", \"Dnk/Pnts\"), #   alpha = 0.8, #   group_title = \"Status for 2021\", #   title = \"% of HHs by self-reported status from 2021 to 2022\" # )"},{"path":"https://gnoblet.github.io/visualizeR/index.html","id":"example-7-lollipop-chart","dir":"","previous_headings":"Charts","what":"Example 7: Lollipop chart","title":"What a color! What a viz!","text":"","code":"library(tidyr) # Prepare long data df <- tibble::tibble(   admin1 = replicate(15, sample(letters, 8)) |> t() |> as.data.frame() |> unite(\"admin1\", sep = \"\") |> dplyr::pull(admin1),   stat = rnorm(15, mean = 50, sd = 15) ) |>   dplyr::mutate(stat = round(stat, 0))  # Simple vertical lollipop chart lollipop(   df = df,   x = \"admin1\",   y = \"stat\",   flip = FALSE,   dot_size = 3,   y_title = \"% of HHs\",   x_title = \"Admin 1\",   title = \"% of HHs that received humanitarian assistance\" ) # Horizontal lollipop chart with custom colors hlollipop(   df = df,   x = \"admin1\",   y = \"stat\",   dot_size = 4,   line_size = 1,   add_color = color(\"cat_5_main_2\"),   line_color = color(\"cat_5_main_4\"),   y_title = \"% of HHs\",   x_title = \"Admin 1\",   title = \"% of HHs that received humanitarian assistance\" ) # Create data for grouped lollipop - using set.seed for reproducibility set.seed(123) df_grouped <- tibble::tibble(   admin1 = rep(c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"), 2),   group = rep(c(\"Group A\", \"Group B\"), each = 6),   stat = c(rnorm(6, mean = 40, sd = 10), rnorm(6, mean = 60, sd = 10)) ) |>   dplyr::mutate(stat = round(stat, 0))  # Grouped lollipop chart with proper side-by-side positioning lollipop(   df = df_grouped,   x = \"admin1\",   y = \"stat\",   group = \"group\",   order = \"grouped_y\",   dot_size = 3.5,   line_size = 0.8,   y_title = \"Value\",   x_title = \"Category\",   title = \"True side-by-side grouped lollipop chart\" ) # Horizontal grouped lollipop chart hlollipop(   df = df_grouped,   x = \"admin1\",   y = \"stat\",   group = \"group\",   dot_size = 3.5,   line_size = 0.8,   y_title = \"Category\",   x_title = \"Value\",   title = \"Horizontal side-by-side grouped lollipop chart\" )"},{"path":"https://gnoblet.github.io/visualizeR/reference/bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple bar chart — hbar","title":"Simple bar chart — hbar","text":"`bar()` simple bar chart customization allowed, particular `theme_fun` argument theming. `hbar()` uses `bar()` sane defaults horizontal bar chart.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple bar chart — hbar","text":"","code":"hbar(   ...,   flip = TRUE,   add_text = FALSE,   theme_fun = theme_bar(flip = flip, add_text = add_text) )  bar(   df,   x,   y,   group = \"\",   facet = \"\",   order = \"none\",   x_rm_na = TRUE,   y_rm_na = TRUE,   group_rm_na = TRUE,   facet_rm_na = TRUE,   y_expand = 0.1,   add_color = color(\"cat_5_main_1\"),   add_color_guide = TRUE,   flip = FALSE,   wrap = NULL,   position = \"dodge\",   alpha = 1,   x_title = NULL,   y_title = NULL,   group_title = NULL,   title = NULL,   subtitle = NULL,   caption = NULL,   width = 0.8,   add_text = FALSE,   add_text_size = 4.5,   add_text_color = color(\"dark_grey\"),   add_text_font_face = \"bold\",   add_text_threshold_display = 0.05,   add_text_suffix = \"%\",   add_text_expand_limit = 1.2,   add_text_round = 1,   theme_fun = theme_bar(flip = flip, add_text = add_text, axis_text_x_angle = 0,     axis_text_x_vjust = 0.5, axis_text_x_hjust = 0.5),   scale_fill_fun = scale_fill_visualizer_discrete(),   scale_color_fun = scale_color_visualizer_discrete() )"},{"path":"https://gnoblet.github.io/visualizeR/reference/bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple bar chart — hbar","text":"... Additional arguments passed `bar()` flip TRUE FALSE (default). Default TRUE horizontal bar plot. add_text TRUE FALSE. Add values text. theme_fun Whatever theme function. custom theme, use theme_fun = NULL. df data frame. x quoted numeric column. y quoted character column coercible character column. group quoted grouping categorical column, e.g. administrative areas population groups. facet quoted grouping categorical column, e.g. administrative areas population groups. order character scalar specifying order type (one \"none\", \"y\", \"grouped\"). See details. x_rm_na Remove NAs x? y_rm_na Remove NAs y? group_rm_na Remove NAs group? facet_rm_na Remove NAs facet? y_expand Multiplier expand y axis. add_color Add color bars (grouping). add_color_guide legend added? wrap x-labels wrapped? Number characters. position chart stacked? Default \"dodge\". Can take \"dodge\" \"stack\". alpha Fill transparency. x_title x scale title. Default NULL. y_title y scale title. Default NULL. group_title group legend title. Default NULL. title Plot title. Default NULL. subtitle Plot subtitle. Default NULL. caption Plot caption. Default NULL. width Bar width. add_text_size Text size. add_text_color Text color. add_text_font_face Text font_face. add_text_threshold_display Minimum value add text label. add_text_suffix percent FALSE, add suffix text label? add_text_expand_limit Default adding 10% top bar. add_text_round Round text label. scale_fill_fun Scale fill function. Default scale_fill_visualizer_discrete(). scale_color_fun Scale color function. Default scale_color_visualizer_discrete().","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/check_vars_in_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if variables are in data frame — check_vars_in_df","title":"Check if variables are in data frame — check_vars_in_df","text":"Check variables data frame","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/check_vars_in_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if variables are in data frame — check_vars_in_df","text":"","code":"check_vars_in_df(df, vars)"},{"path":"https://gnoblet.github.io/visualizeR/reference/check_vars_in_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if variables are in data frame — check_vars_in_df","text":"df data frame vars vector variable names","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/check_vars_in_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if variables are in data frame — check_vars_in_df","text":"stop statement","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/color.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers to extract defined colors as hex codes — color","title":"Helpers to extract defined colors as hex codes — color","text":"[color()] returns requested columns, returns NA absent. [color_pattern()] returns colors start pattern.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers to extract defined colors as hex codes — color","text":"","code":"color(..., unname = TRUE)  color_pattern(pattern, unname = TRUE)"},{"path":"https://gnoblet.github.io/visualizeR/reference/color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers to extract defined colors as hex codes — color","text":"... Character names colors. NULL returns colors. unname Boolean. output vector unnamed? Default `TRUE`. pattern Pattern start colors' name.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helpers to extract defined colors as hex codes — color","text":"Hex codes named unnamed.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/color.html","id":"naming-of-colors","dir":"Reference","previous_headings":"","what":"Naming of colors","title":"Helpers to extract defined colors as hex codes — color","text":"* branding colors start \"branding\"; * , categorical colors start \", cat_\"; * sequential colors start \"seq_\"; , number indicates number colors belong palettes, string name palette, , finally, number position color. E.g., \"seq_5_red_4\" 4th color continuous palettes 5 colors red band. Exception made white, light_grey, dark_grey, black.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/dumbbell.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dumbbell chart. — dumbbell","title":"Make dumbbell chart. — dumbbell","text":"Make dumbbell chart.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/dumbbell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dumbbell chart. — dumbbell","text":"","code":"dumbbell(   df,   col,   group_x,   group_y,   point_size = 5,   point_alpha = 1,   segment_size = 2.5,   segment_color = color(\"light_blue_grey\"),   group_x_title = NULL,   group_y_title = NULL,   x_title = NULL,   title = NULL,   subtitle = NULL,   caption = NULL,   line_to_y_axis = FALSE,   line_to_y_axis_type = 3,   line_to_y_axis_width = 0.5,   line_to_y_axis_color = color(\"dark_grey\"),   add_text = FALSE,   add_text_vjust = 2,   add_text_size = 3.5,   add_text_color = color(\"dark_grey\"),   theme_fun = theme_dumbbell(),   scale_fill_fun = scale_fill_visualizer_discrete(),   scale_color_fun = scale_color_visualizer_discrete() )"},{"path":"https://gnoblet.github.io/visualizeR/reference/dumbbell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dumbbell chart. — dumbbell","text":"df data frame. col numeric column. group_x grouping column x-axis; two groups. group_y grouping column y-axis. point_size Point size. point_alpha Point alpha. segment_size Segment size. segment_color Segment color. group_x_title X-group legend title. group_y_title Y-axis group title. x_title X-axis title. title Title. subtitle Subtitle. caption Caption. line_to_y_axis TRUE FALSE; add line connected points Y-axis. line_to_y_axis_type Line Y-axis type. line_to_y_axis_width Line Y-axis width. line_to_y_axis_color Line Y-axis color. add_text TRUE FALSE; add text points. add_text_vjust Vertical adjustment. add_text_size Text size. add_text_color Text color. theme_fun ggplot2 theme, default `theme_dumbbell()` scale_fill_fun ggplot2 scale_fill function, default `scale_fill_visualizer_discrete()` scale_color_fun ggplot2 scale_color function, default `scale_color_visualizer_discrete()`","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/dumbbell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dumbbell chart. — dumbbell","text":"dumbbell chart.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notallin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Not All In Operator — %notallin%","title":"Not All In Operator — %notallin%","text":"Tests elements `` contained `b`.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notallin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Not All In Operator — %notallin%","text":"","code":"a %notallin% b"},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notallin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Not All In Operator — %notallin%","text":"Vector test b Vector test ","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notallin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Not All In Operator — %notallin%","text":"TRUE least one element `` `b`, otherwise FALSE","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Not In Operator — %notin%","title":"Not In Operator — %notin%","text":"negation `","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Not In Operator — %notin%","text":"","code":"a %notin% b"},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Not In Operator — %notin%","text":"Vector value test b Vector test ","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/grapes-notin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Not In Operator — %notin%","text":"Logical vector TRUE elements `` `b`","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple lollipop chart — hlollipop","title":"Simple lollipop chart — hlollipop","text":"`lollipop()` simple lollipop chart (dots connected baseline segment) customization allowed. `hlollipop()` uses `lollipop()` sane defaults horizontal lollipop chart.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple lollipop chart — hlollipop","text":"","code":"hlollipop(..., flip = TRUE, theme_fun = theme_lollipop(flip = flip))  lollipop(   df,   x,   y,   group = \"\",   facet = \"\",   order = \"y\",   x_rm_na = TRUE,   y_rm_na = TRUE,   group_rm_na = TRUE,   facet_rm_na = TRUE,   y_expand = 0.1,   add_color = color(\"cat_5_main_1\"),   add_color_guide = TRUE,   flip = FALSE,   wrap = NULL,   alpha = 1,   x_title = NULL,   y_title = NULL,   group_title = NULL,   title = NULL,   subtitle = NULL,   caption = NULL,   dot_size = 4,   line_size = 0.8,   line_color = color(\"dark_grey\"),   dodge_width = 0.9,   theme_fun = theme_lollipop(flip = flip, axis_text_x_angle = 0, axis_text_x_vjust = 0.5,     axis_text_x_hjust = 0.5),   scale_fill_fun = scale_fill_visualizer_discrete(),   scale_color_fun = scale_color_visualizer_discrete() )"},{"path":"https://gnoblet.github.io/visualizeR/reference/lollipop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple lollipop chart — hlollipop","text":"... Additional arguments passed `lollipop()` flip TRUE FALSE (default). Default TRUE horizontal lollipop plot. theme_fun Whatever theme function. custom theme, use theme_fun = NULL. df data frame. x quoted character column coercible character column. y quoted numeric column. group quoted grouping categorical column, e.g. administrative areas population groups. facet quoted grouping categorical column, e.g. administrative areas population groups. order character scalar specifying order type (one \"none\", \"y\", \"grouped\"). See details. x_rm_na Remove NAs x? y_rm_na Remove NAs y? group_rm_na Remove NAs group? facet_rm_na Remove NAs facet? y_expand Multiplier expand y axis. add_color Add color dots (grouping). add_color_guide legend added? wrap x-labels wrapped? Number characters. alpha Fill transparency dots. x_title x scale title. Default NULL. y_title y scale title. Default NULL. group_title group legend title. Default NULL. title Plot title. Default NULL. subtitle Plot subtitle. Default NULL. caption Plot caption. Default NULL. dot_size size dots. line_size size/width line connecting dots baseline. line_color color line connecting dots baseline. dodge_width Width position dodge using groups (controls space grouped lollipops). scale_fill_fun Scale fill function. Default scale_fill_visualizer_discrete(). scale_color_fun Scale color function. Default scale_color_visualizer_discrete().","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/lollipop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple lollipop chart — hlollipop","text":"ggplot object","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple lollipop chart — hlollipop","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(x = letters[1:5], y = c(10, 5, 7, 12, 8)) # Vertical lollipop lollipop(df, \"x\", \"y\") # Horizontal lollipop hlollipop(df, \"x\", \"y\") } # }"},{"path":"https://gnoblet.github.io/visualizeR/reference/palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate a color palette — palette","title":"Interpolate a color palette — palette","text":"Interpolate color palette","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate a color palette — palette","text":"","code":"palette(palette = \"cat_5_main\", reverse = FALSE, show_palettes = FALSE, ...)"},{"path":"https://gnoblet.github.io/visualizeR/reference/palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate a color palette — palette","text":"palette Character name palette palettes reverse Boolean indicating whether palette reversed show_palettes ouput set palettes names pick ? Default `FALSE` ... Additional arguments pass colorRampPalette()","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate a color palette — palette","text":"color palette","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/palette_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate color palettes — palette_gen","title":"Generate color palettes — palette_gen","text":"[palette_gen()] generates color palette let choose whether continuous discrete. [palette_gen_categorical()] [palette_gen_sequential()] generates respectively discrete continuous palettes.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/palette_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate color palettes — palette_gen","text":"","code":"palette_gen(palette, type, direction = 1, ...)  palette_gen_categorical(palette = \"cat_5_main\", direction = 1)  palette_gen_sequential(palette = \"cat_5_main\", direction = 1, ...)"},{"path":"https://gnoblet.github.io/visualizeR/reference/palette_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate color palettes — palette_gen","text":"palette Palette name [palette()]. type \"categorical\" \"sequential\" \"divergent\". direction 1 -1; order colors reversed? ... Additional arguments pass [colorRampPalette()] type \"continuous\".","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/point.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple scatterplot — point","title":"Simple scatterplot — point","text":"Simple scatterplot","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple scatterplot — point","text":"","code":"point(   df,   x,   y,   group = \"\",   facet = \"\",   facet_scales = \"free\",   x_rm_na = TRUE,   y_rm_na = TRUE,   group_rm_na = TRUE,   facet_rm_na = TRUE,   add_color = color(\"cat_5_main_1\"),   add_color_guide = TRUE,   flip = TRUE,   alpha = 1,   size = 2,   x_title = NULL,   y_title = NULL,   group_title = NULL,   title = NULL,   subtitle = NULL,   caption = NULL,   theme_fun = theme_point(),   scale_fill_fun = scale_fill_visualizer_discrete(),   scale_color_fun = scale_color_visualizer_discrete() )"},{"path":"https://gnoblet.github.io/visualizeR/reference/point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple scatterplot — point","text":"df data frame. x quoted numeric column. y quoted numeric column. group quoted grouping categorical column, e.g. administrative areas population groups. facet quoted grouping categorical column. facet_scales Character. Either \"free\" (default) \"fixed\" facet scales. x_rm_na Remove NAs x? y_rm_na Remove NAs y? group_rm_na Remove NAs group? facet_rm_na Remove NAs facet? add_color Add color points (grouping). add_color_guide legend added? flip TRUE FALSE. alpha Fill transparency. size Point size. x_title x scale title. Default NULL. y_title y scale title. Default NULL. group_title group legend title. Default NULL. title Plot title. Default NULL. subtitle Plot subtitle. Default NULL. caption Plot caption. Default NULL. theme_fun Whatever theme. Default theme_point(). NULL theming needed. scale_fill_fun Scale fill function. Default scale_fill_visualizer_discrete(). scale_color_fun Scale color function. Default scale_color_visualizer_discrete().","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/reorder_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder a Data Frame — reorder_by","title":"Reorder a Data Frame — reorder_by","text":"Reorder Data Frame","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/reorder_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder a Data Frame — reorder_by","text":"","code":"reorder_by(df, x, y, group = \"\", order = \"y\", dir_order = 1)"},{"path":"https://gnoblet.github.io/visualizeR/reference/reorder_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder a Data Frame — reorder_by","text":"df data frame reordered. x character scalar specifying column reordered. y character scalar specifying column order ordering values. group character scalar specifying grouping column (optional). order character scalar specifying order type (one \"none\", \"y\", \"grouped\"). See details. dir_order logical scalar specifying whether flip order.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/reorder_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder a Data Frame — reorder_by","text":"reordered data frame.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/reorder_by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder a Data Frame — reorder_by","text":"Ordering takes following possible values: * \"none\": reordering. * \"y\": Order values y. * \"grouped_y\": Order values y group. * \"x\": Order alphabetically x. * \"grouped_x\": Order alphabetically x group.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/reorder_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder a Data Frame — reorder_by","text":"","code":"# Example usage df <- data.frame(col1 = c(\"b\", \"a\", \"c\"), col2 = c(10, 25, 3)) reorder_by(df, \"col1\", \"col2\") #>   col1 col2 #> 1    c    3 #> 2    b   10 #> 3    a   25"},{"path":"https://gnoblet.github.io/visualizeR/reference/scale_color_visualizer_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale constructors for fill and colors — scale_color_visualizer_discrete","title":"Scale constructors for fill and colors — scale_color_visualizer_discrete","text":"function based [palette()]. palette NULL, used palette magma gpplot2's viridis scale constructors.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/scale_color_visualizer_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale constructors for fill and colors — scale_color_visualizer_discrete","text":"","code":"scale_color_visualizer_discrete(   palette = \"cat_5_main\",   direction = 1,   reverse_guide = TRUE,   title_position = NULL,   ... )  scale_fill_visualizer_discrete(   palette = \"cat_5_main\",   direction = 1,   reverse_guide = TRUE,   title_position = NULL,   ... )  scale_fill_visualizer_continuous(   palette = \"seq_5_main\",   direction = 1,   reverse_guide = TRUE,   title_position = NULL,   ... )  scale_color_visualizer_continuous(   palette = \"seq_5_main\",   direction = 1,   reverse_guide = TRUE,   title_position = NULL,   ... )"},{"path":"https://gnoblet.github.io/visualizeR/reference/scale_color_visualizer_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale constructors for fill and colors — scale_color_visualizer_discrete","text":"palette Palette name [palette()]. direction 1 -1; order colors reversed? reverse_guide Boolean indicating whether guide reversed. title_position Position title. See [ggplot2::guide_legend()]'s title.position argument. ... Additional arguments passed [ggplot2::discrete_scale()] discrete [ggplot2::scale_fill_gradient()] continuous.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/theme_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Theme for Bar Charts — theme_bar","title":"Custom Theme for Bar Charts — theme_bar","text":"Give reach colors fonts ggplot. Theme dumbbell charts based theme_default. custom theme specifically designed lollipop charts appropriate grid lines axis styling based whether chart flipped (horizontal) .","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/theme_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Theme for Bar Charts — theme_bar","text":"","code":"theme_bar(   flip = TRUE,   add_text = FALSE,   axis_text_x_angle = 0,   axis_text_x_vjust = 0.5,   axis_text_x_hjust = 0.5 )  theme_default(   title_font_family = \"Carlito\",   title_size = 20,   title_color = color(\"dark_grey\"),   title_font_face = \"bold\",   title_hjust = NULL,   title_position_to_plot = TRUE,   subtitle_font_family = \"Carlito\",   subtitle_size = 16,   subtitle_color = color(\"dark_grey\"),   subtitle_font_face = \"plain\",   subtitle_hjust = NULL,   text_font_family = \"Carlito\",   text_size = 14,   text_color = color(\"dark_grey\"),   text_font_face = \"plain\",   panel_background_color = \"#FFFFFF\",   panel_border = FALSE,   panel_border_color = color(\"dark_grey\"),   legend_position = \"top\",   legend_direction = \"horizontal\",   legend_justification = \"center\",   legend_reverse = TRUE,   legend_title_size = 14,   legend_title_color = color(\"dark_grey\"),   legend_title_font_face = \"plain\",   legend_title_font_family = \"Carlito\",   legend_text_size = 14,   legend_text_color = color(\"dark_grey\"),   legend_text_font_face = \"plain\",   legend_text_font_family = \"Carlito\",   facet_size = 15,   facet_color = color(\"dark_grey\"),   facet_font_face = \"bold\",   facet_font_family = \"Carlito\",   facet_bg_color = color(\"lighter_grey\"),   axis_x = TRUE,   axis_y = TRUE,   axis_text_x = TRUE,   axis_line_x = FALSE,   axis_ticks_x = FALSE,   axis_text_y = TRUE,   axis_line_y = TRUE,   axis_ticks_y = TRUE,   axis_text_font_family = \"Carlito\",   axis_text_size = 14,   axis_text_color = color(\"dark_grey\"),   axis_text_font_face = \"plain\",   axis_title_size = 15,   axis_title_color = color(\"dark_grey\"),   axis_title_font_face = \"plain\",   axis_text_x_angle = 0,   axis_text_x_vjust = 0.5,   axis_text_x_hjust = 0.5,   grid_major_x = TRUE,   grid_major_y = FALSE,   grid_major_color = color(\"dark_grey\"),   grid_major_x_size = 0.1,   grid_major_y_size = 0.1,   grid_minor_x = TRUE,   grid_minor_y = FALSE,   grid_minor_color = color(\"dark_grey\"),   grid_minor_x_size = 0.05,   grid_minor_y_size = 0.05,   caption_font_family = \"Carlito\",   caption_font_face = \"plain\",   caption_position_to_plot = TRUE,   caption_size = 12,   caption_color = color(\"dark_grey\"),   ... )  theme_dumbbell()  theme_lollipop(   flip = TRUE,   axis_text_x_angle = 0,   axis_text_x_vjust = 0.5,   axis_text_x_hjust = 0.5 )  theme_point()"},{"path":"https://gnoblet.github.io/visualizeR/reference/theme_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Theme for Bar Charts — theme_bar","text":"flip Logical. Whether plot flipped (horizontal). add_text TRUE FALSE. Add values text. axis_text_x_angle Angle x-axis text. axis_text_x_vjust Vertical justification x-axis text. axis_text_x_hjust Horizontal justification x-axis text. title_font_family Title font family. Default \"Carlito\". title_size size title. Defaults 12. title_color Title color. title_font_face Title font face. Default \"bold\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). title_hjust Title horizontal justification. Default NULL. Use 0.5 center title. title_position_to_plot TRUE FALSE. Positioning plot panel? subtitle_font_family Subtitle font family. Default \"Carlito\". subtitle_size size subtitle. Defaults 10. subtitle_color Subtitle color. subtitle_font_face Subtitle font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). subtitle_hjust Subtitle horizontal justification. Default NULL. Use 0.5 center subtitle. text_font_family Text font family. Default \"Carlito\". text_size size text title, subtitle caption. Defaults 10. text_color Text color. text_font_face Text font face. Default \"bold\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). panel_background_color color panel background color. Default white. panel_border Boolean. Plot panel border? Default FALSE. panel_border_color color. Default REACH main grey. legend_position Position legend; Default \"right\". Can take \"right\", \"left\", \"top\", \"bottom\" \"none\". legend_direction Direction legend. Default \"vertical\". Can take \"vertical\" \"horizontal\". legend_justification addition legend_direction, place legend. Can take \"left\", \"bottom\", \"center\", \"right\", \"top\". legend_reverse Reverse color guide? Default TRUE. legend_title_size Legend title size. legend_title_color Legend title color. legend_title_font_face Legend title font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). legend_title_font_family Legend title font family. Default \"Carlito\". legend_text_size Legend text size. legend_text_color Legend text color. legend_text_font_face Legend text font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). legend_text_font_family Legend text font family. Default \"Carlito\". facet_size Facet font size. facet_color Facet font color. facet_font_face Facet font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). facet_font_family Facet font family. Default \"Carlito\". facet_bg_color Facet background color. axis_x Boolean. need x-axis? axis_y Boolean. need y-axis? axis_text_x Boolean. need text x-axis? axis_line_x Boolean. need line x-axis? axis_ticks_x Boolean. need line x-axis? axis_text_y Boolean. need text y-axis? axis_line_y Boolean. need line y-axis? axis_ticks_y Boolean. need line y-axis? axis_text_font_family Axis text font family. Default \"Carlito\". axis_text_size Axis text size. axis_text_color Axis text color. axis_text_font_face Axis text font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). axis_title_size Axis title size. axis_title_color Axis title color. axis_title_font_face Axis title font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). grid_major_x Boolean. need major grid lines x-axis? grid_major_y Boolean. need major grid lines y-axis? grid_major_color Major grid lines color. grid_major_x_size Major X line size. grid_major_y_size Major Y line size. grid_minor_x Boolean. need minor grid lines x-axis? grid_minor_y Boolean. need minor grid lines y-axis? grid_minor_color Minor grid lines color. grid_minor_x_size Minor X line size. grid_minor_y_size Minor Y line size. caption_font_family Caption font family. Default \"Carlito\". caption_font_face Caption font face. Default \"plain\". Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). caption_position_to_plot TRUE FALSE. Positioning plot panel? caption_size size caption. Defaults 10. caption_color Caption color. ... Additional arguments passed [ggplot2::theme()].","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/theme_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Theme for Bar Charts — theme_bar","text":"custom theme object. ggplot2 theme object custom theme object.","code":""},{"path":"https://gnoblet.github.io/visualizeR/reference/theme_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Theme for Bar Charts — theme_bar","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) df <- data.frame(x = letters[1:5], y = c(10, 5, 7, 12, 8)) ggplot(df, aes(x, y)) +   geom_point() +   theme_lollipop() } # }"},{"path":"https://gnoblet.github.io/visualizeR/reference/visualizeR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"visualizeR: What a color! What a viz! — visualizeR-package","title":"visualizeR: What a color! What a viz! — visualizeR-package","text":"basically provides colors hex codes, color palettes, viz functions (graphs maps).","code":""},{"path":[]},{"path":"https://gnoblet.github.io/visualizeR/reference/visualizeR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"visualizeR: What a color! What a viz! — visualizeR-package","text":"Maintainer: Noblet Guillaume gnoblet@zaclys.net","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-089000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.8.9000","title":"visualizeR 0.8.9000","text":"Add waffle(). Add pal_default() function fallback scale functions initiative theme_reach(). uses viridis::magma(). Update AGORA palettes. small bug fixes.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-079000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.7.9000","title":"visualizeR 0.7.9000","text":"Add dumbbell(). Add alluvial() Add donut() Add lollipop() Add parameters theme_reach(), including grid lines args.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-069000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.6.9000","title":"visualizeR 0.6.9000","text":"Add dumbbell(). Add parameters theme_reach().","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-059000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.5.9000","title":"visualizeR 0.5.9000","text":"Add wrapping title, subtitle caption thanks ggtext Add wrapping labels bar() x-discrete scale. Add parameters theme_reach()","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-049000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.4.9000","title":"visualizeR 0.4.9000","text":"Breaking changes: remove dependency ggblanket. Full rewrite theme_reach(). bar_reach now bar() theming passed argument theme default theme_reach(). point_reach now point() theming passed argument theme default theme_reach().","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-039000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.3.9000","title":"visualizeR 0.3.9000","text":"Breaking changes: update ggblanket v1.6.1. Add plotting functions indicator maps.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-029000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.2.9000","title":"visualizeR 0.2.9000","text":"Breaking changes: almost functions got refinements, new functions, typically hbar() becomes bar_reach() point_reach() added. Following theme_reach() now used plotting functions. Add README.md.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0179000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.7.9000","title":"visualizeR 0.1.7.9000","text":"Fixed color palettes.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0169000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.6.9000","title":"visualizeR 0.1.6.9000","text":"IMPACT colors palettes added: function cols_impact() pal_impact(). Color palettes REACH added (2 7 continuous palettes) ; see updated cols_reach() pal_reach().","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0159000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.5.9000","title":"visualizeR 0.1.5.9000","text":"Move simplevis successor ggblanket.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0149000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.4.9000","title":"visualizeR 0.1.4.9000","text":"hbar() gains new boolean argument reverse pass pal_reach() pal_agora(), indicating color palette reversed .","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0139000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.3.9000","title":"visualizeR 0.1.3.9000","text":"Small change hbar(): removes error arg within simplevis::gg_hbar() call.","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0129000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.2.9000","title":"visualizeR 0.1.2.9000","text":"duplicate scale_color() function, now scale_fill()","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-0119000","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.1.9000","title":"visualizeR 0.1.1.9000","text":"Added two horizontal bar functions: hbar(), hbar_percent() (#3) Added internals check missing columns bad arguments (#3) Modified theme_reach() documentation Add buffer_bbox() function produce buffered bbox, e.g. use tmap","code":""},{"path":"https://gnoblet.github.io/visualizeR/news/index.html","id":"visualizer-010","dir":"Changelog","previous_headings":"","what":"visualizeR 0.1.0","title":"visualizeR 0.1.0","text":"Added NEWS.md file track changes package Initiate repo","code":""}]
